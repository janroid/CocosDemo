---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by MartinLai.
--- DateTime: 2019/3/19 10:45
---

local MarqueeText = class("MarqueeText", cc.ClippingRectangleNode)

function MarqueeText:ctor(width, height, str, fontSize)
	self:setContentSize(cc.size(width or 0, height or 0))
	self:initText(str, fontSize)
	self:updatePos()
	self:startMove()
end

function MarqueeText:getTextSize()
	return self.m_label and self.m_label:getContentSize()
end

function MarqueeText:setContentSize(size)
	getmetatable(self).setContentSize(self, size)
	self:setClippingRegion(cc.rect(0,0, size.width, size.height))
end

function MarqueeText:setTextView(textView)
	if not textView then return end
	
	if self.m_label then
		self.m_label:removeFromParent(true)
	end
	textView:removeFromParent(true)
	self.m_label = textView
	self:addChild(textView)
	textView:setVisible(true)
	self:updatePos()
end

function MarqueeText:updatePos()
	local labelWidth = self.m_label:getContentSize().width
	local width = self:getContentSize().width
	if labelWidth <= width then
		g_NodeUtils:arrangeToCenter(self.m_label)
	else
		g_NodeUtils:arrangeToLeftCenter(self.m_label)
	end
end

function MarqueeText:initText(str, fontSize)
	self.m_label = cc.Label:createWithSystemFont(str or "",  "fonts/arial.ttf", fontSize or 24)
	self:addChild(self.m_label)
end

function MarqueeText:setString(str)
	self.m_label:setString(str)
	self:updatePos()
	self:startMove()
end

function MarqueeText:setXMLData(str)
	self.m_label:setXMLData(str)
	self:updatePos()
	self:startMove()
end

function MarqueeText:setDuration(time)
	self.m_duration = time or 2.5
end

function MarqueeText:startMove(isLeftToRight)
	local labelWidth = self.m_label:getContentSize().width
	local width = self:getContentSize().width
	if labelWidth <= width then return end
	
	local dw = labelWidth - width
	self.m_label:stopAllActions()
	isLeftToRight = isLeftToRight == nil and true
	if isLeftToRight then
		g_NodeUtils:arrangeToLeftCenter(self.m_label)
		local time = self.m_duration or 2 + dw / 200
		local action = cc.Sequence:create(cc.DelayTime:create(0.7), cc.MoveBy:create(time, cc.p(-dw, 0)))
		self.m_label:runAction(action)
	else
		g_NodeUtils:arrangeToRightCenter(self.m_label)
		local action = cc.Sequence:create(cc.DelayTime:create(0.7), cc.MoveBy:create(self.m_duration or  2 + dw / 100, cc.p(dw, 0)))
		self.m_label:runAction(action)
	end
end

return MarqueeText