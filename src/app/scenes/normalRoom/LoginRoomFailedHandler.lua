---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by MartinLai.
--- DateTime: 2019/1/21 14:17
---

local LoginRoomFailedHandler = class("LoginRoomFailedHandler")

function LoginRoomFailedHandler:showBackDialog(str)
	g_AlertDialog.getInstance()
		:setTitle(GameString.get("tips"))
		:setContent(str)
		:setShowBtnsIndex(g_AlertDialog.S_BUTTON_TYPE.ONE_BUTTON)
		:setCenterBtnTx(GameString.get("str_common_back"))
		:setCloseBtnVisible(false)
		:setCenterBtnFunc(
		function ()
			cc.Director:getInstance():popScene()
		end)
		:show()
end

function LoginRoomFailedHandler:onLoginFailed(errCode)
	Log.d("LoginRoomFailedHandler:onLoginFailed", errCode)
	if errCode ~= nil then
		local codeStr = string.gsub(string.format("0x%02x",errCode), "f", "")
		errCode = tonumber(codeStr, 16) or errCode
	end
	Log.d("LoginRoomFailedHandler:onLoginFailed", errCode)
	
	g_Progress.getInstance():dismiss()
	if errCode == g_RoomInfo.ERROR_LOGIN_MTKEY or errCode == g_RoomInfo.ERROR_LOGIN_RECONN_ROOM then
		g_Progress.getInstance():show()
		self:resetMtkey();
		
		--停服
	elseif errCode == g_RoomInfo.ERROR_LOGIN_SERVER_STOP then
		self:showBackDialog(GameString.get("str_common_svr_stop_tip"))
		--错误的桌子信息
	elseif errCode == g_RoomInfo.ERROR_LOGIN_TABLE_ERR then
		g_Schedule:schedulerOnce(function()
			cc.Director:getInstance():popScene()
		end, nil, 1);
		g_AlarmTips.getInstance():setText(GameString.get("str_room_not_exist")):show()
		
		--被别人登录
	elseif errCode == g_RoomInfo.ERROR_LOGIN_OTHER_RELOGIN then
		self:showBackDialog(GameString.get("str_common_double_login_error"))
		
		--帐号被封
	elseif errCode == g_RoomInfo.ERROR_LOGIN_USER_DISABLE then
		self:showBackDialog(GameString.get("str_common_user_forbidden"))
		--被房主踢出
	elseif errCode == g_RoomInfo.ERROR_LOGIN_KICKOUT then
		self:showBackDialog(GameString.get("str_room_again_enter_room_fail"))
		
		--房间旁观人数到达上限
	elseif errCode == g_RoomInfo.ERROR_LOGIN_ROOM_FULL then
		self:showBackDialog(GameString.get("str_common_room_full"))
		
	elseif errCode == g_RoomInfo.ERROR_LOGIN_END then
		g_AlarmTips.getInstance():setText(GameString.get("str_common_end")):show()
		cc.Director:getInstance():popScene()
		
	elseif errCode == g_RoomInfo.ERROR_LOGIN_NO_APPLY then
		self:showBackDialog(GameString.get("str_common_no_apply"))

	elseif errCode == g_RoomInfo.ERROR_LOGIN_CROSS_SERVER then
		self:requestOnlineInfo()
	else
		self:showBackDialog(GameString.get("str_common_connect_room_fail"))
	end
end

function LoginRoomFailedHandler:requestOnlineInfo()
	local param = HttpCmd:getMethod(HttpCmd.s_cmds.ONLINE_INFO)
	g_HttpManager:doPost(param, self, function (self, isSuccess,data)
		if not isSuccess then
			self:onLoginFailed(g_RoomInfo.ERROR_LOGIN_OTHER)
			return
		end
		if data.mtkey then
			g_AccountInfo:setmtkey(data.mtkey)
		end
		if data.b_picture then
			g_AccountInfo:setBigPic(data.b_picture)
		end
		if data.user_gift then
			g_AccountInfo:setUserGift(data.user_gift)
		end
		local RoomPresenter = import("app.presenter").RoomPresenter
		RoomPresenter:toRoom(data)
	end)
end

function LoginRoomFailedHandler:resetMtkey()
	local param = HttpCmd:getMethod(HttpCmd.s_cmds.RESET_MTKEY)
	g_HttpManager:doPost(param, self, function (self, isSuccess,data)
		if not isSuccess then
			self:onLoginFailed(g_RoomInfo.ERROR_LOGIN_OTHER)
			return
		end

		if data.mtkey then
			g_AccountInfo:setmtkey(data.mtkey)
		end
		g_RoomInfo:setData(data)
		g_EventDispatcher:dispatch(g_SceneEvent.ROOM_RE_LOGIN)
	end)
end

return LoginRoomFailedHandler