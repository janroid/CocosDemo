---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by MartinLai.
--- DateTime: 2019/2/12 18:05
---
local PopupBase        = import("app.common.popup").PopupBase

local InviteFriendPop  = class("InviteFriendPop", PopupBase)
local InviteFriendItem = require("InviteFriendItem")

function InviteFriendPop:ctor()
	PopupBase.ctor(self)
	self:loadLayout('creator/normalRoom/inviteFriendPop.ccreator')
	self:init()
end

function InviteFriendPop:init()
	self.m_bg           = g_NodeUtils:seekNodeByName(self, 'bg')
	self.m_btnClose     = g_NodeUtils:seekNodeByName(self, 'btnClose')
	self.m_txTitle      = g_NodeUtils:seekNodeByName(self, 'txTitle')
	self.m_listViewNode = g_NodeUtils:seekNodeByName(self, 'listViewNode')
	self.m_tips         = g_NodeUtils:seekNodeByName(self, 'txTips')
	
	self.m_txTitle:setString(GameString.get("str_friend_invite_friends_page_title"))
	self.m_tips:setString(GameString.get("str_ran_noFriendTips"))
	
	self.m_btnClose:addClickEventListener(function()
		self:hidden()
	end)
	self:initListView()
	self.m_tips:setVisible(false)
end

function InviteFriendPop:initListView()
	local function cellSize(tb, idx)
		return 650, 80
	end
	
	local function cells()
		return self.data and #self.data or 0
	end
	
	local function cellAtIndex(tb, idx)
		idx        = idx + 1
		local cell = tb:dequeueCell()
		if not cell then
			cell = InviteFriendItem:create()
		end
		cell:updateCell(self.data[idx])
		return cell
	end
	
	local tableView  = cc.TableView:create(cc.size(650, 340))
	self.m_tableView = tableView
	tableView:setDirection(cc.SCROLLVIEW_DIRECTION_VERTICAL) --设置滑动方向
	tableView:setVerticalFillOrder(cc.TABLEVIEW_FILL_TOPDOWN) --设置填充方向
	
	tableView:setBounceable(true)
	tableView:setPosition(cc.p(0, 0))
	
	tableView:registerScriptHandler(cellAtIndex, cc.TABLECELL_SIZE_AT_INDEX)
	tableView:registerScriptHandler(cells, cc.NUMBER_OF_CELLS_IN_TABLEVIEW)
	tableView:registerScriptHandler(cellSize, cc.TABLECELL_SIZE_FOR_INDEX)
	tableView:setDelegate()
	self.m_listViewNode:addChild(tableView)
end

function InviteFriendPop:show(data)
	PopupBase.show(self)
	self.m_tips:setVisible(false)
	self.data = data or self.data or {}
	--self.m_tableView:reloadData()
	g_Progress.getInstance():show()
	local params = HttpCmd:getMethod(HttpCmd.s_cmds.FRIEND_LIST)
	g_HttpManager:doPost(params, self, self.onFriendDataResp)
end

function InviteFriendPop:onFriendDataResp(isSuccess, data)
	g_Progress.getInstance():dismiss()
	Log.d("onFriendDataResp", data)
	if isSuccess and g_TableLib.isTable(data) then
		self.data = {}
		for k, v in pairs(data) do
			if v.tid ~= g_RoomInfo:getTid() then
				self.data[#self.data + 1] = v
			end
		end
		self.m_tableView:reloadData()
	end
	if g_TableLib.isEmpty(data) then
		self.m_tips:setVisible(true)
	end
end

return InviteFriendPop
