---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 
--- DateTime:
---

local NormalRoomSceneCtr = import("app.scenes.normalRoom").NormalRoomSceneCtr
local SNGRoomCtr = class("SNGRoomCtr",NormalRoomSceneCtr);
local DailyTaskManager = import("app.scenes.dailyTask").DailyTaskManager
local SNGRewardPop = require("SNGRoomRewardPop")


---配置事件监听函数
SNGRoomCtr.s_eventFuncMap =  {
    [g_SceneEvent.ROOM_SNG_END_PLAY_AGAIN]      = "onPlayAgain"	,
    [g_SceneEvent.ROOM_SNG_RESULT_POP_CLOSE]    = "onResultPopClose"
}

function SNGRoomCtr:ctor(view)
    self.m_view = view
	NormalRoomSceneCtr.ctor(self,view)
	
end

function SNGRoomCtr:onPlayAgain()
    local params = {}
    params.tid = 0
    params.ip = g_RoomInfo:getRoomIp()
    params.port = g_RoomInfo:getRoomPort()
    params.tableType = g_RoomInfo.ROOM_TYPE_KNOCKOUT
    params.playNow = false
    params.enterFrom = 5 -- SNG lobby

    --重新连接房间socket
    g_EventDispatcher:dispatch(g_SceneEvent.ROOM_SWITCH_ROOM, params)
end

--function SNGRoomCtr:onLogoutRoomSuccess()
--    Log.d("SNGRoomCtr:onLogoutRoomSuccess")
--	self:clear()
--	if self.m_switchRoom then
--        self.m_socketManager:openSocket(g_RoomInfo:getProxyIp(), g_RoomInfo:getProxyPort())
--		self.m_switchRoom = false
--	else
--		self:popScene()
--	end
--end

function SNGRoomCtr:onUserSitDown(data)
    self.super.onUserSitDown(self,data)
    self.m_view:onMatchStatusChanged()
    
end

function SNGRoomCtr:onSngStandClick()
    g_AlertDialog.getInstance():setTitle(GameString.get("tips"))
    :setContent(GameString.get("str_room_leave_table_confirm"))
    :setShowBtnsIndex(g_AlertDialog.S_BUTTON_TYPE.TWO_BUTTON)
    :setLeftBtnTx(GameString.get("cancel"))
    :setRightBtnTx(GameString.get("confirm_btn"))
    :setRightBtnFunc(self.onStand,self)
    :show()
end


function SNGRoomCtr:nextStandUp(data)
    g_RoomInfo.m_isSngSwitchRoom = true
    self.super.nextStandUp(self,data)
end

function SNGRoomCtr:onStand()
    self.m_socketManager:requestStandUp()
end

function SNGRoomCtr:onCleanup()
    self.m_view = nil
	NormalRoomSceneCtr.onCleanup(self)
	
end

function SNGRoomCtr:canSwitchImmediately()
    return not self.m_SeatManager:selfInSeat()
end

function SNGRoomCtr:onResultPopClose()
    self.m_view:onResultPopClose()
end


function SNGRoomCtr:clear()
    self.m_view:hideCenterNotice()
    NormalRoomSceneCtr.clear(self)

end

function SNGRoomCtr:onLoginRoomSuccess()
    NormalRoomSceneCtr.onLoginRoomSuccess(self)
    g_EventDispatcher:dispatch(g_SceneEvent.SNG_REQ_USER_INFO_DATA)
end

return SNGRoomCtr